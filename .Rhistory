Ind <- xts(Taux[, 3], order.by = as.Date(Taux[,1]))
Gov <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ban <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ind <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
RPBan <- Ban - Gov
RPInd <- Ind - Gov
plot(RPBan)
Gov <- xts(Taux[, 2], order.by = as.Date(Taux[,1]))
Ban <- xts(Taux[, 2], order.by = as.Date(Taux[,1]))
Ind <- xts(Taux[, 3], order.by = as.Date(Taux[,1]))
Gov <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ban <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ind <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
plot(Gov)
plot(Ban)
plot(Ind)
Gov <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ban <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ind <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Gov
plot(Gov)
lpot(Ban)
plot(Ban)
plot(Ind)
RPBan <- Ban - Gov
RPInd <- Ind - Gov
RPBan
Taux
Gov <- xts(Taux[, 2], order.by = as.Date(Taux[,1]))
Ban <- xts(Taux[, 3], order.by = as.Date(Taux[,1]))
Ind <- xts(Taux[, 4], order.by = as.Date(Taux[,1]))
Gov <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ban <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ind <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
RPBan <- Ban - Gov
RPInd <- Ind - Gov
plot(RPInd)
RPBan
plot(RPBan)
Gov <- xts(Taux[, 2], order.by = as.Date(Taux[,1]))
Ban <- xts(Taux[, 3], order.by = as.Date(Taux[,1]))
Ind <- xts(Taux[, 4], order.by = as.Date(Taux[,1]))
Gov <- ts_frequency(Gov, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ban <- ts_frequency(Ban, to = "quarter", aggregate = "mean", na.rm = TRUE)
Ind <- ts_frequency(Ind, to = "quarter", aggregate = "mean", na.rm = TRUE)
RPBan <- Ban - Gov
RPInd <- Ind - Gov
plot(RPBan)
plot(RPInd)
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
XVars
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
XVars
startDate
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
XVars
YVars
length(XVars)
dim(XVars)
dim(XVars)[1]
Model    <- Arima(YVars, order = c(1, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1]-1])
summary(Model)
Model    <- Arima(YVars, order = c(1, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1]-1,])
summary(Model)
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, RPInd)), startDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate)
Model    <- Arima(YVars, order = c(1, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1]-1,])
summary(Model)
Forecast <- forecast(Model, xreg = XVars[length(XVars)], h = 1, level = c(50, 70, 80, 95))
Forecast <- forecast(Model, xreg = XVars[length(XVars),], h = 1, level = c(50, 70, 80, 95))
p <- autoplot(Forecast)
Forecast <- forecast(Model, xreg = XVars[dim(XVars)[1],], h = 1, level = c(50, 70, 80, 95))
dim(XVars)[1]XVars[dim(XVars)[1],]
XVars[dim(XVars)[1],]
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, RPInd)), startDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate)
Model    <- Arima(YVars, order = c(1, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1]-1,])
summary(Model)
Forecast <- forecast(Model, xreg = XVars[dim(XVars)[1],], h = 1, level = c(50, 70, 80, 95))
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1],]), h = 1, level = c(50, 70, 80, 95))
p <- autoplot(Forecast)
p <- p + theme_minimal() + ylab("")+xlab("")+
scale_color_brewer(palette = "Dark2")+ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
ggsave(filename = "./S01E02_BarometreMondial//PIBPrevision.png", width = 5, height = 4)
plot(RPInd)
plot(RPBan)
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, RPBan)), startDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate)
Model    <- Arima(YVars, order = c(1, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1]-1,])
summary(Model)
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1],]), h = 1, level = c(50, 70, 80, 95))
p <- autoplot(Forecast)
p <- p + theme_minimal() + ylab("")+xlab("")+
scale_color_brewer(palette = "Dark2")+ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
Vol  <- read.csv("./S01E02_BarometreMondial//VSMI.csv", as.data.frame = TRUE)
# Télécharger les données pour l'incertitude sur les marché financier
download.file(url = "https://www.six-group.com/exchanges/downloads/indexdata/h_vsmi_30.csv", destfile = "./S01E02_BarometreMondial//VSMI.csv", mode="wb")
Vol  <- read.csv("./S01E02_BarometreMondial//VSMI.csv", as.data.frame = TRUE)
Vol  <- read.csv("./S01E02_BarometreMondial//VSMI.csv")
Vol
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
Vol
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
Vol
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
XVars
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
XVars
endDate
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1]-1,])
summary(Model)
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1],]), h = 1, level = c(50, 70, 80, 95))
p <- autoplot(Forecast)
p <- p + theme_minimal() + ylab("")+xlab("")+
scale_color_brewer(palette = "Dark2")+ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
summary(Model)
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
scale_color_brewer(palette = "Dark2")+ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1],]), h = 1, level = c(50, 70, 80, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
scale_color_brewer(palette = "Dark2")+ggtitle("Prévision croissance PIB Suisse (en %)")+
scale_color_manual(values = c("black", "#1B9E77", "#D95F02"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
ggsave(filename = "./S01E02_BarometreMondial//PIBPrevision.png", width = 5, height = 4)
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1],]), h = 1, level = c(50, 70, 80, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
scale_color_brewer(palette = "Dark2")+ggtitle("Prévision croissance PIB Suisse (en %)")+
scale_color_manual(values = c("#1B9E77", "#D95F02"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1],]), h = 1, level = c(50, 70, 80, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
H
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1],]), h = 2, level = c(50, 70, 80, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, Vol)), startDate, endDate)
XVars
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
p
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, Vol)), startDate, endDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate, endDate)
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1]-1,])
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1],])
summary(Model)
dim(XVars)[1]-1
XVars
YVars
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars)
YVars
XVars[1:dim(XVars)[1]-1,]
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1],])
endDate
YVars
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
XVars[1:dim(XVars)[1],]
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:dim(XVars)[1]-2,])
dim(XVars)[1]
XVars[1:dim(XVars)[1]-2,]
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:(dim(XVars)[1]-2),])
summary(Model)
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1],]), h = 2, level = c(50, 70, 80, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
Forecast
t(XVars[dim(XVars)[1],])
XVars
Forecast <- forecast(Model, xreg = t(XVars[dim(XVars)[1]-1:dim(XVars)[1],]), h = 2, level = c(50, 70, 80, 95))
XVars[dim(XVars)[1]-1:dim(XVars)[1],]
Forecast <- forecast(Model, xreg = t(XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 70, 80, 95))
XVars[(dim(XVars)[1]-1):dim(XVars)[1],]
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 70, 80, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
Forecast
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 70, 80, 95))
p <- autoplot(Forecast)
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, Vol)), startDate, endDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate, endDate)
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:(dim(XVars)[1]-2),])
summary(Model)
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 70, 80, 95))
p <- autoplot(Forecast)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 70, 80, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-1, 1.5))
p
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
p <- p + scale_x_continuous(limits=c(2018, 2020))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
# Simulate the forecast density assuming that the forecast error is normally distributed
# This implies that y(t+h) ~ N(y(t+h|t), sigh^2), that is, the future value of GDP growth
# is normally distributed with a mean equal to the point forecast and variance equal to the
# forecast error variance.
# Compute forecast error Variance
sigh2 <- getForecastVariance(Forecast)
NSim    <- 5000    # Note that you can test your codes with a small number of simulations to increase speed and calculate the final results with a higher number
fcsth   <- Forecast$mean
SimFcst <- matrix(NA, nrow = 2, ncol = NSim)
H       <- length(Forecast$mean)
SimFcst = rnorm(NSim, fcsth[H-1:H], sqrt(sigh2[H-1:H]))
SimFcst = xts(t(SimFcst), order.by = ts_summary(BaroQ)$end)
# Compute the probability of a negative growth rate
PNeg2020Q1 = mean(SimFcst<0)
print(PNeg2020Q1)
SimFcst
dim(SimFcst)
SimFcst <- matrix(NA, nrow = 2, ncol = NSim)
dim(SimFcst)
H       <- length(Forecast$mean)
SimFcst[2, ] = rnorm(NSim, fcsth[H], sqrt(sigh2[H]))
SimFcst[1, ] = rnorm(NSim, fcsth[H-1], sqrt(sigh2[H-1]))
SimFcst[2, ] = rnorm(NSim, fcsth[H], sqrt(sigh2[H]))
SimFcst = xts(t(SimFcst), order.by = ts_summary(BaroQ)$end)
SimFcst = xts((SimFcst), order.by = ts_summary(BaroQ)$end)
SimFcst
dim(SimFcst)
ts_summary(BaroQ)$end
SimFcst = xts((SimFcst), order.by = c("2020-01-01", "2020-04-01"))
SimFcst = xts((SimFcst), order.by = as.Date(c("2020-01-01", "2020-04-01")))
# Compute the probability of a negative growth rate
PNeg2020Q1 = mean(SimFcst<0)
print(PNeg2020Q1)
print(c(PNeg2020Q1, PNeg2020Q2)
print(c(PNeg2020Q1, PNeg2020Q2))
print(c(PNeg2020Q1, PNeg2020Q2))
# Compute the probability of a negative growth rate
PNeg2020Q1 = mean(SimFcst[1,]<0)
PNeg2020Q2 = mean(SimFcst[2,]<0)
print(c(PNeg2020Q1, PNeg2020Q2))
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
Baro
plot(Baro)
? forecast
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(NA))
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(FALSE))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(FALSE))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p +  geom_text(aes(label = y))
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
Forecast$mean
p <- p +  geom_text(aes(label = mean))
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(FALSE))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p +  geom_text(aes(label = mean))
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, Vol)), startDate, endDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate, endDate)
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:(dim(XVars)[1]-2),])
summary(Model)
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(FALSE))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p +  geom_text(aes(label = mean))
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, Vol)), startDate, endDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate, endDate)
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:(dim(XVars)[1]-2),])
summary(Model)
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(FALSE))
p <- autoplot(Forecast,fan=TRUE)
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 80 90 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p +  geom_text(aes(label = mean))
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, Vol)), startDate, endDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate, endDate)
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:(dim(XVars)[1]-2),])
summary(Model)
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 80 90 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p +  geom_text(aes(label = mean))
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
#-------------------------------------------------------------------------------------
# Estimate simple forecasting model for computing the probability of a negative growth rate
#-------------------------------------------------------------------------------------
XVars    <- ts_span(ts_ts(ts_c(BaroQ, Vol)), startDate, endDate)
YVars    <- ts_span(ts_ts(ts_pc(PIB)), startDate, endDate)
Model    <- Arima(YVars, order = c(0, 0, 0), include.constant= TRUE, xreg = XVars[1:(dim(XVars)[1]-2),])
summary(Model)
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 80 90 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
ggsave(filename = "./S01E02_BarometreMondial//PIBPrevision.png", width = 5, height = 4)
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 80, 90, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 80, 90, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p +  geom_text(aes(label = mean))
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
Forecast <- forecast(Model, xreg = (XVars[(dim(XVars)[1]-1):dim(XVars)[1],]), h = 2, level = c(50, 80, 90, 95))
p <- autoplot(Forecast,fan=TRUE)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggtitle("Prévision croissance PIB Suisse (en %)")+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p <- p + scale_x_continuous(limits=c(2018, 2021))
p <- p + scale_y_continuous(limits=c(-2, 1.5))
p
ggsave(filename = "./S01E02_BarometreMondial//PIBPrevision.png", width = 5, height = 4)
Forecast$mean
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E02_BarometreMondial.R', encoding = 'UTF-8')
