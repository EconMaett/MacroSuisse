`Taux directeur`          = ts_span(Taux$Direct, "2013-01-01", "2017-01-01"),
`Conféderation à 10 ans`  = ts_span(Taux$Conf10, "2013-01-01", "2017-01-01"),
`Entreprises à 8 ans`     = ts_span(Taux$Manuf8, "2013-01-01", "2017-01-01"),
`Prêts hypothécaires`     = ts_span(Taux$Hypo, "2013-01-01", "2017-01-01"),
`Dépôts d'épargnes`       = ts_span(Taux$Epargne, "2013-01-01", "2017-01-01"),
title = "Taux d'intérêts en territoire négatif (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "black", "#E6AB02", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
Credit2<- read.xlsx("./S01E03_TauxDirecteur/TauxCredits.xlsx", sheetName = "Report", as.data.frame = TRUE, startRow = 17)
Credit2 <- xts(Credit2[, 2:dim(Credit2)[2]], order.by =  as.Date(paste(Credit2[, 1], "-01-01", sep ="")))
Credit2
# Recession 2008
p <- ts_ggplot(
`Taux directeur`          = ts_span(Taux$Direct, "2006-01-01", "2010-01-01"),
`Conféderation à 10 ans`  = ts_span(Taux$Conf10, "2006-01-01", "2010-01-01"),
`Entreprises à 8 ans`     = ts_span(Taux$Manuf8, "2006-01-01", "2010-01-01"),
`Prêts hypothécaires`     = ts_span(Taux$Hypo, "2006-01-01", "2010-01-01"),
`Dépôts d'épargnes`       = ts_span(Taux$Epargne, "2006-01-01", "2010-01-01"),
`Investissements`       = ts_span(Taux$Invest, "2006-01-01", "2010-01-01"),
title = "Taux d'intérêts pendant la recession 2008/2009 (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "black", "#E6AB02", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
# Put everything in one xts
Taux <- ts_c(Monet, Oblig, Direct, Credit, Credit2)
Taux <- ts_span(Taux, startDate, endDate)
# Before 2019, there was a target range instead of a policy rate. Take the middle of the
# target range
Taux$Direct[is.na(Taux$Direct)] <- ((Taux$Super+Taux$Infer)/2)[is.na(Taux$Direct)]
# Recession 2008
p <- ts_ggplot(
`Taux directeur`          = ts_span(Taux$Direct, "2006-01-01", "2010-01-01"),
`Conféderation à 10 ans`  = ts_span(Taux$Conf10, "2006-01-01", "2010-01-01"),
`Entreprises à 8 ans`     = ts_span(Taux$Manuf8, "2006-01-01", "2010-01-01"),
`Prêts hypothécaires`     = ts_span(Taux$Hypo, "2006-01-01", "2010-01-01"),
`Dépôts d'épargnes`       = ts_span(Taux$Epargne, "2006-01-01", "2010-01-01"),
`Investissements`       = ts_span(Taux$Invest, "2006-01-01", "2010-01-01"),
title = "Taux d'intérêts pendant la recession 2008/2009 (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "black", "#E6AB02", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
# Taux négatifs
p <- ts_ggplot(
`Taux directeur`          = ts_span(Taux$Direct, "2013-01-01", "2017-01-01"),
`Conféderation à 10 ans`  = ts_span(Taux$Conf10, "2013-01-01", "2017-01-01"),
`Entreprises à 8 ans`     = ts_span(Taux$Manuf8, "2013-01-01", "2017-01-01"),
`Prêts hypothécaires`     = ts_span(Taux$Hypo, "2013-01-01", "2017-01-01"),
`Dépôts d'épargnes`       = ts_span(Taux$Epargne, "2013-01-01", "2017-01-01"),
`Investissements`       = ts_span(Taux$Invest, "2013-01-01", "2017-01-01"),
title = "Taux d'intérêts en territoire négatif (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
# Recession 2008
p <- ts_ggplot(
`Taux directeur`          = ts_span(Taux$Direct, "2006-01-01", "2010-01-01"),
`Conféderation à 10 ans`  = ts_span(Taux$Conf10, "2006-01-01", "2010-01-01"),
`Entreprises à 8 ans`     = ts_span(Taux$Manuf8, "2006-01-01", "2010-01-01"),
`Prêts hypothécaires`     = ts_span(Taux$Hypo, "2006-01-01", "2010-01-01"),
`Dépôts d'épargnes`       = ts_span(Taux$Epargne, "2006-01-01", "2010-01-01"),
`Investissements`       = ts_span(Taux$Invest, "2006-01-01", "2010-01-01"),
title = "Taux d'intérêts pendant la recession 2008/2009 (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E03_TauxDirecteur.R', encoding = 'UTF-8')
# Crise Corona
p <- ts_ggplot(
`Taux directeur`          = ts_span(Taux$Direct, "2016-01-01", endDate),
`Conféderation à 10 ans`  = ts_span(Taux$Conf10, "2016-01-01", endDate),
`Entreprises à 8 ans`     = ts_span(Taux$Manuf8, "2016-01-01", endDate),
`Prêts hypothécaires`     = ts_span(Taux$Hypo, "2016-01-01", endDate),
`Dépôts d'épargnes`       = ts_span(Taux$Epargne, "2016-01-01", endDate),
`Investissements`       = ts_span(Taux$Invest, "2016-01-01", endDate),
title = "Taux d'intérêts pendant la crise Corona (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E03_TauxDirecteur.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E03_TauxDirecteur.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E03_TauxDirecteur.R', encoding = 'UTF-8')
# Recession 2002
p <- ts_ggplot(
`Taux directeur`          = ts_span(Taux$Direct, startDate, "2004-01-01"),
`Conféderation à 10 ans`  = ts_span(Taux$Conf10, startDate, "2004-01-01"),
`Entreprises à 8 ans`     = ts_span(Taux$Manuf8, startDate, "2004-01-01"),
`Prêts hypothécaires`     = ts_span(Taux$Hypo, startDate, "2004-01-01"),
`Dépôts d'épargnes`       = ts_span(Taux$Epargne, startDate, "2004-01-01"),
`Investissements`       = ts_span(Taux$Invest, "2006-01-01", "2010-01-01"),
title = "Taux d'intérêts pendant la recession 2001/2002 (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "black", "#E6AB02", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
# Recession 2002
p <- ts_ggplot(
`Taux directeur`          = ts_span(Taux$Direct, startDate, "2004-01-01"),
`Conféderation à 10 ans`  = ts_span(Taux$Conf10, startDate, "2004-01-01"),
`Entreprises à 8 ans`     = ts_span(Taux$Manuf8, startDate, "2004-01-01"),
`Prêts hypothécaires`     = ts_span(Taux$Hypo, startDate, "2004-01-01"),
`Dépôts d'épargnes`       = ts_span(Taux$Epargne, startDate, "2004-01-01"),
`Investissements`       = ts_span(Taux$Invest, startDate, "2004-01-01"),
title = "Taux d'intérêts pendant la recession 2001/2002 (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "black", "#E6AB02", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
ggsave(filename = "./S01E03_TauxDirecteur/AutresTaux2001.png", width = 5, height = 4)
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E03_TauxDirecteur.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E03_TauxDirecteur.R', encoding = 'UTF-8')
ts_c(Taux$Infer, Taux$Direct, Taux$Super)
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
# Import the data
Prix  <- read.xlsx("./S01E04_Prix/IPC.xlsx", sheetName = "Report", as.data.frame = TRUE, startRow = 5)
Prix
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
# Import the data
Prix  <- read.xlsx("./S01E04_Prix/IPC.xlsx", sheetName = "Report", as.data.frame = TRUE, startRow = 5)
Prix
# Import the data
Prix  <- read.xlsx("./S01E04_Prix/IPC_Manualx.xlsx", sheetName = "Report", as.data.frame = TRUE, startRow = 5)
# Import the data
Prix  <- read.xlsx("./S01E04_Prix/IPC_Manuelx.xlsx", sheetName = "Sheet1", as.data.frame = TRUE, startRow = 1)
Prix
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
endDate
Date   <- seq("1982-12-01", as.Date(endDate), by = "month")
Date   <- seq(as.Date("1982-12-01"), as.Date(endDate), by = "month")
Type
Weight
Weight <- as.numeric(Prix$Weight)
Weight
# Import the data
Prix  <- read.xlsx("./S01E04_Prix/IPC_Manuelx.xlsx", sheetName = "Main", as.data.frame = TRUE, startRow = 1)
Type   <- Prix$PosType
Weight <- as.numeric(Prix$Weight)
Index  <- Prix[2:dim(Prix)[1], 7]
Date   <- seq(as.Date("1982-12-01"), as.Date(endDate), by = "month")
Index
Weight
Type
Prix
Prix[,8:dim(Prix)[2]]
Prix[2:3,8:dim(Prix)[2]]
Prix[1:3,8:dim(Prix)[2]]
Prix <- xts(t(Prix[1:3,8:dim(Prix)[2]]), order.by = Date)
Prix[1:3,8:dim(Prix)[2]]Prix
Prix
plot(Prix)
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
dim(Comp)[2]]
dim(Comp)[2]
Weight
Type
Weight <- Weight[, Type == 4]
Weight <- Weight[Type == 4,]
Weight <- Weight[Type == 4]
Index  <- Index[,Type == 4,]
Index
Index  <- xts(t(Comp[, 8:dim(Comp)[2]]), order.by = Date)
Index
Index  <- Index[,Type == 4,]
Index
sum(Weight)
sum(Weight, na.rm = TRUE)
Weight
Weight[is.na(Weight)] <- 0
Baseline <- calcIndex(Index, Weight, "2015-12-01")
Baseline
plot(Baseline)
plot(ts_c(Baseline, Prix[,1]))
Comp$Missing
Missing <- Missing[Type == 4]
Missing <- Comp$Missing
Missing <- Missing[Type == 4]
Comp$MissingMissing
Missing
Missing[is.na(Missing)] <- 0
Counterf <-  ts_span(calcIndex(Index[,Missing == FALSE], Weight[Missing == FALSE], "2015-12-01"), "2010-12-01")
plot(ts_c(Baseline, Counterf, Prix[,1]))
Baseline <- ts_span(calcIndex(Index, Weight, "2015-12-01"), "2010-12-01")
Counterf <- ts_span(calcIndex(Index[,Missing == FALSE], Weight[Missing == FALSE], "2015-12-01"), "2010-12-01")
plot(ts_c(Baseline, Counterf, Prix[,1]))
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officel)`       = ts_span(Prix[,1], "2015-12-01"),
`IPC (propre calcul)` = Baseline,
`IPC (sans prix imputés)` = Counterf,
title = "Taux directeur et taux sur le marché monétaire (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officel)`           = ts_pcy(ts_span(Prix[,1], "2015-12-01")),
`IPC (propre calcul)`     = ts_pcy(Baseline),
`IPC (sans prix imputés)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officel)`           = ts_pcy(ts_span(Prix[,1], "2015-12-01")),
#`IPC (propre calcul)`     = ts_pcy(Baseline),
`IPC (sans prix imputés)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officel)`           = ts_pcy(ts_span(Prix[,1], "2015-12-01")),
#`IPC (propre calcul)`     = ts_pcy(Baseline),
`IPC (sans prix imputés)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=1,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
ggsave(filename = "./S01E04_Prix/PrixImpute.png", width = 5, height = 4)
p <- ts_ggplot(
`IPC`               = ts_pcy(ts_span(Prix[,1], "2015-12-01")),
`Biens domestiques` = ts_pcy(ts_span(Prix[,2], "2015-12-01")),
`Biens importés`    = ts_pcy(ts_span(Prix[,3], "2015-12-01")),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=1,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
Counterf
plot(Counterf)
Baseline
plot(Baseline)
plot(ts_c(Baseline, Counterf, Prix[,1]))
Missing
Baseline <- ts_span(calcIndex(Index, Weight, "2015-12-01"), "2010-12-01")
Counterf <- ts_span(calcIndex(Index[,Missing == 0], Weight[Missing == 0], "2015-12-01"), "2010-12-01")
plot(ts_c(Baseline, Counterf, Prix[,1]))
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officiel)`           = ts_pcy(ts_span(Prix[,1], "2015-12-01")),
#`IPC (propre calcul)`     = ts_pcy(Baseline),
`IPC (sans prix imputés)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=1,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
#`IPC (officiel)`           = ts_pcy(ts_span(Prix[,1], "2015-12-01")),
`IPC (propre calcul)`     = ts_pcy(Baseline),
`IPC (sans prix imputés)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=1,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officiel)`           = ts_pcy(ts_span(Prix[,1], "2015-12-01")),
`IPC (propre calcul)`     = ts_pcy(Baseline),
#`IPC (sans prix imputés)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=1,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officiel)`           = ts_pcy(ts_span(Prix[,1], "2015-12-01")),
#`IPC (propre calcul)`     = ts_pcy(Baseline),
`IPC (sans prix imputés)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=1,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officiel)`           = ts_pcy(ts_span(Prix[,1], "2010-12-01")),
#`IPC (propre calcul)`     = ts_pcy(Baseline),
`IPC (sans prix imputés)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=1,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
p <- ts_ggplot(
`IPC (officiel)`           = ts_pcy(ts_span(Prix[,1], "2010-12-01")),
#`IPC (propre calcul)`     = ts_pcy(Baseline),
`IPC (sans categories avec prix imputés en Avril 2020)` = ts_pcy(Counterf),
title = "Taux d'inflation (par rapport à l'année précédente, en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("#1B9E77", "#D95F02", "black", "#E7298A", "#E6AB02", "black", "#A6761D"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=1,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
source('C:/Users/daenu/switchdrive/Public/Videos/GitHub/S01E04_Prix.R', encoding = 'UTF-8')
library(tidyverse) # Core tidyverse packages dplyr, forcats, ggplot2, lubridate, purrr, readr, stringr, tibble, tidyr
library(tsbox)
library(xts) # builds on ts objects
library(readxl) # Non-core tidyverse package; load separately
startDate <- "2007-06-01"
urls <- c(
"https://www.bfs.admin.ch/bfsstatic/dam/assets/7966853/master",
"https://www.six-group.com/exchanges/downloads/indexdata/hsb_maturity_gov_y.csv",
"https://www.six-group.com/exchanges/downloads/indexdata/hsb_maturity_dom_non_gov_rating_sbi_y.csv"
)
names <- c("Defaults_OFS.xlsx", "ObligationsConf.csv", "ObligationsEnt.csv")
# Ideally, you would use a tryCatch statement here
for (i in seq_along(urls)) {
download.file(url = urls[i], destfile = paste0("S01E01_PrimeDeRisque/", names[i]), mode = "wb", quiet = FALSE)
}
# Note: If you use readr::read_csv() instead of base::read.csv, the data are stored in tibble objects instead of data.frame objects
# Selecting a single column of a tibble results in a tibble, selecting a single column of a data.frame results in a vector
Gov      <- read_delim(file = "S01E01_PrimeDeRisque/ObligationsConf.csv", delim = ";", skip = 4)
NonGov   <- read_delim(file = "S01E01_PrimeDeRisque/ObligationsEnt.csv", delim = ";", skip = 4)
Defaults <- read_excel(path = "S01E01_PrimeDeRisque/Defaults_OFS.xlsx", sheet = "T6.2.3.1", skip = 1)
# Beginning of default procedures (Ouverture des procedures de faillite)
# I calculate the growth rate of default procedures as a share of active firms in 2017
# https://www.bfs.admin.ch/bfs/de/home/statistiken/industrie-dienstleistungen/unternehmen-beschaeftigte/unternehmensdemografie/bestand-aktiver.html
myDate     <- as.Date(paste0(names(Defaults[, 2:ncol(Defaults)]), "-01-01"))
myDefaults <- as.numeric(Defaults[1, 2:ncol(Defaults)]) # Eröffnung Konkursverfahren
Faillite   <- ts_diff(xts(x = myDefaults, order.by = myDate)) / 1000 # Take first difference, divide by 1000
# Create date series
myDate1 <- dmy(Gov$DATE)
myDate2 <- dmy(NonGov$DATE)
# Create gov. bond yields
Gov1  <- xts(as.numeric(pull(Gov[, 2])), order.by = myDate1) # SBIGY1: SBI Dom Gov 1-3 Y
Gov3  <- xts(as.numeric(pull(Gov[, 3])), order.by = myDate1) # SBIGY3: SBI Dom Gov 3-7 Y
Gov7  <- xts(as.numeric(pull(Gov[, 7])), order.by = myDate1) # SG71Y:  SBI Dom Gov 7-10 Y
Gov10 <- xts(as.numeric(pull(Gov[, 8])), order.by = myDate1) # SG10Y:  SBI Dom Gov 10+ Y
# Create corporate bond yields AAA - BBB
BBB1  <- xts(as.numeric(pull(NonGov[, 3])), order.by = myDate2) # SDN13Y: SBI Dom Non-Gov AAA-BBB 1-3 Y
BBB3  <- xts(as.numeric(pull(NonGov[, 4])), order.by = myDate2) # SDN35Y: SBI Dom Non-Gov AAA-BBB 3-5 Y
BBB7  <- xts(as.numeric(pull(NonGov[, 6])), order.by = myDate2) # SDN71Y: SBI Dom Non-Gov AAA-BBB 7-10 Y
BBB10 <- xts(as.numeric(pull(NonGov[, 7])), order.by = myDate2) # SDN10Y: SBI Dom Non-Gov AAA-BBB 10+ Y
AA1  <- xts(as.numeric(pull(NonGov[, 15])), order.by = myDate2) # SAN13Y: SBI Dom Non-Gov AAA-AA 1-3 Y
AA3  <- xts(as.numeric(pull(NonGov[, 16])), order.by = myDate2) # SAN35Y: SBI Dom Non-Gov AAA-AA 3-5 Y
AA7  <- xts(as.numeric(pull(NonGov[, 18])), order.by = myDate2) # SAN71Y: SBI Dom Non-Gov AAA-AA 7-10 Y
AA10 <- xts(as.numeric(pull(NonGov[, 19])), order.by = myDate2) # SAN10Y: SBI Dom Non-Gov AAA-AA 10+ Y
# Compute implies probability of default
# i: risk-less interest rate
# x:  risk premium
# x = (1+i+x) - (1+i) -> We can calculate the risk premium as the rate of return between
#                        a risk-less investment and the corporate bond yield
RPBBB1 <- BBB1 - Gov1
RPAAA1 <- AA1  - Gov1
#-------------------------------------------------------------------------------------
# Create charts
#-------------------------------------------------------------------------------------
myLines <- c(as.numeric(as.Date("2008-09-15")), as.numeric(as.Date("2015-01-15")), as.numeric(as.Date("2020-02-01")))
p <- ts_ggplot(
`Confédération`                   = ts_span(Gov1, startDate),
`Entreprises (notation AA-AAA)`   = ts_span(AA1, startDate),
`Entreprises (notation BBB-AAA)`  = ts_span(BBB1, startDate),
title = "Rendements des obligations à 1 ans (en %)"
)
p
p <- ts_plot(
`Confédération`                   = ts_span(Gov1, startDate),
`Entreprises (notation AA-AAA)`   = ts_span(AA1, startDate),
`Entreprises (notation BBB-AAA)`  = ts_span(BBB1, startDate),
title = "Rendements des obligations à 1 ans (en %)"
)
p <- p + theme_minimal() + ylab("")+xlab("")+
ggplot2::geom_line(aes(),size=1)+ggplot2::scale_color_brewer(palette = "Dark2")+
scale_color_manual(values = c("black", "#1B9E77", "#D95F02"))+
theme(legend.position="bottom",legend.margin=margin(0,0,0,0),legend.box.margin=margin(-20,-5,0,-5))+ggplot2::guides(col=guide_legend(nrow=2,byrow=TRUE))+ggplot2::theme(legend.title = element_blank())+
theme(axis.line = element_line(colour = "black", size = 0.1))+ theme(panel.background = element_blank())+
theme(panel.border = element_rect(linetype = "solid", colour = "black", fill = NA))+theme(text = element_text(family = "Palatino"))+
theme(panel.grid.major = element_line(colour = "black",size=0.1,linetype="dotted"), panel.grid.minor = element_blank())
p
p <- ts_ggplot(
`Confédération`                   = ts_span(Gov1, startDate),
`Entreprises (notation AA-AAA)`   = ts_span(AA1, startDate),
`Entreprises (notation BBB-AAA)`  = ts_span(BBB1, startDate),
title = "Rendements des obligations à 1 ans (en %)"
)
p
