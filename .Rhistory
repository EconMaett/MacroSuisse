unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(name == "Switzerland") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D0_0_0")
df |>
as_tibble() |>
unnest_wider(dimensions) |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(name == "Switzerland") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D0_0_0") |>
select(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(name == "Switzerland") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D0_0_0") |>
select(dimensionItems) |>
filter(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(name == "Switzerland") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D0_0_0") |>
select(dimensionItems) |>
unnest(dimensionItems)
Direct |>
filter(D0 %in% c("LZ", "UG0", "OG0"))
download.file(url = url_zikrepro_csv, destfile = "S01E03_TauxDirecteur/TauxOperationsNouvelles.csv", method = "curl")
### TauxOperationsNouvelles ----
# Published interest rates for new transactions - Publizierte Zinssätze für Neugeschäfte - Published interest rates for new transactions
url_zikrepro_csv <- "https://data.snb.ch/api/cube/zikrepro/data/csv/en"
url_zikrepro_dim <- "https://data.snb.ch/api/cube/zikrepro/dimensions/en"
download.file(url = url_zikrepro_csv, destfile = "S01E03_TauxDirecteur/TauxOperationsNouvelles.csv", method = "curl")
Credti <- read_delim(file = "S01E03_TauxDirecteur/TauxOperationsNouvelles.csv", delim = ";", skip = 2)
Credit <- read_delim(file = "S01E03_TauxDirecteur/TauxOperationsNouvelles.csv", delim = ";", skip = 2)
head(Credit)
unique(Credit$D0)
unique(Credit$D1)
Credit |>
filter(D0 == "M")
# Hypo: Produits	Prêts hypothécaires - Prêts hypothécaires à taux variable
# Epargne: Particuliers- Dépôts d’épargne
# Terme: Dépôts à terme (montant minimal: 100 000 francs) - Durée en mois - 3
df <- fromJSON(txt = url_zikrepro_dim, simplifyDataFrame = TRUE)
df |>
as_tibble()
df |>
as_tibble() |>
unnest_wider(dimensions)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1")
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_HYP")
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_HYP") |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_HYP") |>
select(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_HYP") |>
select(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_PHA") |>
select(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_PHA") |>
select(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3")
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
select(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
select(dimensionItems) |>
unnest(dimensionItems)
unique(Credit$D1)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1")
df |>
as_tibble() |>
unnest_wider(dimensions)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest_wider(dimensionItems, names_repair = "unique")
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems)
df |>
as_tibble() |>
unnest_wider(dimensions) |>
filter(id == "D1") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems) |>
filter(id == "D1_3") |>
select(dimensionItems) |>
unnest(dimensionItems) |>
unnest(dimensionItems, names_repair = "unique")
unique(Credit$D0) # M, 025Q, 05Q, 075Q
unique(Credit$D1)
Credit |>
filter(D0 == "M") |>
filter(D1 == "D1_3_LZM")
Credit |>
filter(D0 == "M") |>
filter(D1 == "D1_3_3")
Credit |>
filter(D0 == "M") |>
filter(D1 == "D1_3")
unique(Credit$D1)
Credit |>
filter(D0 == "M") |>
filter(D1 %in% c("MV", "S1", "D1_5_3"))
Credit |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
filter(Date >= startDate) |>
filter(D0 == "M") |>
filter(D1 %in% c("MV", "S1", "D1_5_3"))
unique(Credit$D1)
Credit |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
filter(Date >= startDate) |>
filter(D0 == "M") |>
filter(D1 %in% c("MV", "S1", "33"))
## Import the data ----
urls <- c(
"https://data.snb.ch/api/cube/zimoma/data/csv/en",
"https://data.snb.ch/api/cube/rendoblid/data/csv/en",
"https://data.snb.ch/api/cube/zikreddet/data/csv/en",
"https://data.snb.ch/api/cube/snboffzisa/data/csv/en",
"https://data.snb.ch/api/cube/zikrepro/data/csv/en"
)
names <- c(
"MarchéMonétaire.csv",
"Obligations.csv",
"TauxCredits.csv",
"TauxDirecteur.csv",
"TauxOperationsNouvelles.csv"
)
# Ideally wrap this in a tryCatch() statement
for (i in seq_along(names)) {
download.file(url = urls[i], destfile = paste0("S01E03_TauxDirecteur/", names[i]), method = "curl", quiet = TRUE)
}
# Ideally wrap this in a tryCatch() statement
for (i in seq_along(names)) {
download.file(url = urls[i], destfile = paste0("S01E03_TauxDirecteur/", names[i]), method = "curl", quiet = FALSE)
}
### MarchéMonétaire ----
Monet <- read_delim(file = "S01E03_TauxDirecteur/MarchéMonétaire.csv", delim = ";", skip = 2)
Monet
Monet <- Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01"))) |>
filter(Date >= startDate)
### MarchéMonétaire ----
Monet <- read_delim(file = "S01E03_TauxDirecteur/MarchéMonétaire.csv", delim = ";", skip = 2)
Monet <- Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01")))
Monet
Monet   <- read.xlsx("S01E03_TauxDirecteur/MarchéMonétaire.xlsx", sheetName = "Report", as.data.frame = TRUE, startRow = 17)
Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01")))
Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01"))) |>
pivot_wider(names_from = D0, values_from = Value)
Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01"))) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(LIB3M = `3M0`)
Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01"))) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(LIB3M = `3M0`) |>
ts_xts()
Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01"))) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(LIB3M = `3M0`)
Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01"))) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(LIB3M = `3M0`) |>
na.omit()
Monet <- Monet |>
filter(D0 %in% c("SARON", "3M0")) |> # Chose 1 day SARON and 3-month LIBOR
mutate(Date = as.Date(paste0(Date, "-01"))) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(LIB3M = `3M0`) |>
na.omit()
### Obligations ----
Oblig <- read_delim(file = "S01E03_TauxDirecteur/Obligations.csv", delim = ";", skip = 2)
Oblig
Oblig |>
filter(D0 %in% c("10J0", "IKH", "AAA"))
### TauxOperationsNouvelles ----
# Published interest rates for new transactions - Publizierte Zinssätze für Neugeschäfte - Published interest rates for new transactions
Credit <- read_delim(file = "S01E03_TauxDirecteur/TauxOperationsNouvelles.csv", delim = ";", skip = 2)
head(Credit) # Date, D0, D1, Value
Credit |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
filter(D0 == "M") |>
filter(D1 %in% c("MV", "S1", "33"))
Credit |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
filter(D0 == "M") |>
filter(D1 %in% c("MV", "S1", "33")) |>
select(Date, D1, Value)
Credit |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
filter(D0 == "M") |>
filter(D1 %in% c("MV", "S1", "33")) |>
select(Date, D1, Value) |>
pivot_wider(names_from = D1, values_from = Value)
Credit |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
filter(D0 == "M") |>
filter(D1 %in% c("MV", "S1", "33")) |>
select(Date, D1, Value) |>
pivot_wider(names_from = D1, values_from = Value) |>
rename(Hypo = MV, Epargne = S1, Terme = `33`)
Credit |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
filter(D0 == "M") |>
filter(D1 %in% c("MV", "S1", "33")) |>
select(Date, D1, Value) |>
pivot_wider(names_from = D1, values_from = Value) |>
rename(Hypo = MV, Epargne = S1, Terme = `33`) |>
na.omit()
### TauxDirecteur ----
# Official interest rates - Offizielle Zinssätze - Taux d’intérêt officiels
Direct <- read_delim(file = "S01E03_TauxDirecteur/TauxDirecteur.csv", delim = ";", skip = 2)
head(Direct) # Date, D0, Value
Direct |>
filter(D0 %in% c("LZ", "UG0", "OG0"))
Direct |>
filter(D0 %in% c("LZ", "UG0", "OG0")) |>
pivot_wider(names_from = D0, values_from = Value)
Direct |>
filter(D0 %in% c("LZ", "UG0", "OG0")) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(Direct = LZ, Infer = UG0, Super = OG0)
Direct <- Direct |>
filter(D0 %in% c("LZ", "UG0", "OG0")) |> # SNB policy rate, lower and upper target range for 3-month CHF LIBOR
pivot_wider(names_from = D0, values_from = Value) |>
rename(Direct = LZ, Infer = UG0, Super = OG0)
### TauxCrédits ----
# Interest rates on new loan agreements - Zinssätze von neuen Kreditabschlüssen - Taux d’intérêt appliqués aux nouveaux contrats de crédit
Credit2 <- read_delim(file = "S01E03_TauxDirecteur/TauxCredits.csv", delim = ";", skip = 2)
head(Credit2) # Date, D0, Value
Credit2 |>
filter(D0 %in% c("K", "FI"))
Credit2 |>
filter(D0 %in% c("K", "FI")) |>
pivot_wider(names_from = D0, values_from = Value)
Credit2 |>
filter(D0 %in% c("K", "FI")) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(Courant = K, Invest = FI)
### TauxOperationsNouvelles ----
Credit <- read_delim(file = "S01E03_TauxDirecteur/TauxOperationsNouvelles.csv", delim = ";", skip = 2)
### Obligations ----
Oblig <- read_delim(file = "S01E03_TauxDirecteur/Obligations.csv", delim = ";", skip = 2)
Oblig |>
filter(D0 %in% c("10J0", "IKH", "AAA"))
Oblig |>
filter(D0 %in% c("10J0", "IKH", "AAA")) |>
pivot_wider(names_from = D0, values_from = Value)
Oblig |>
filter(D0 %in% c("10J0", "IKH", "AAA")) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(Conf10 = `10J0`, Manuf8 = IKH, Foreign8 = AAA)
### MarchéMonétaire ----
Monet <- read_delim(file = "S01E03_TauxDirecteur/MarchéMonétaire.csv", delim = ";", skip = 2)
# Chose 1 day SARON and 3-month LIBOR
Monet <- Monet |>
filter(D0 %in% c("SARON", "3M0")) |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(LIB3M = `3M0`) |>
na.omit()
Monet
ts_xts(Monet)
ts_ts(Monet)
head(Monet)
Monet.xts <- xts(x = Monet[,-c("Date")], order.by = Monet$Date)
Monet.xts <- xts(x = Monet[,-1], order.by = Monet$Date)
Monet.xts
Monet <- xts(x = Monet[,-1], order.by = Monet$Date)
### MarchéMonétaire ----
Monet <- read_delim(file = "S01E03_TauxDirecteur/MarchéMonétaire.csv", delim = ";", skip = 2)
# Chose 1 day SARON and 3-month LIBOR
Monet <- Monet |>
filter(D0 %in% c("SARON", "3M0")) |>
mutate(Date = as.Date(paste0(Date, "-01"))) |>
pivot_wider(names_from = D0, values_from = Value) |>
rename(LIB3M = `3M0`) |>
na.omit()
Monet <- xts(x = Monet[,-1], order.by = Monet$Date)
Monet
### Obligations ----
Oblig <- read_delim(file = "S01E03_TauxDirecteur/Obligations.csv", delim = ";", skip = 2)
### Obligations ----
Oblig <- read_delim(file = "S01E03_TauxDirecteur/Obligations.csv", delim = ";", skip = 2)
